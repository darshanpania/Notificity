package com.darshan.notificity.database

import androidx.room.Database
import androidx.room.RoomDatabase
import androidx.room.migration.Migration
import androidx.sqlite.db.SupportSQLiteDatabase

@Database(entities = [NotificationEntity::class], version = 3, exportSchema = false)
abstract class AppDatabase : RoomDatabase() {
    abstract fun notificationDao(): NotificationDao

    companion object {
        /**
         * MIGRATION 1 -> 2
         * Change in PrimaryKey for [NotificationEntity]
         * The primary key is now composed of [NotificationEntity.id] && [NotificationEntity.packageName]
         * The [NotificationEntity.id] is now set to the notificationId which was originally sent to the NotificationManager
         * */
        internal val MIGRATION_1_2: Migration = object : Migration(1, 2) {
            override fun migrate(database: SupportSQLiteDatabase) {
                database.execSQL(
                    "CREATE TABLE IF NOT EXISTS `notification_new` " +
                            "(`id` INTEGER NOT NULL, " +
                            "`packageName` TEXT NOT NULL, " +
                            "`timestamp` INTEGER NOT NULL, " +
                            "`appName` TEXT NOT NULL, " +
                            "`title` TEXT NOT NULL, " +
                            "`content` TEXT NOT NULL, " +
                            "`imageUrl` TEXT, " +
                            "`extras` TEXT, " +
                            "PRIMARY KEY(`id`, `packageName`))"
                )

                database.execSQL(
                    "INSERT INTO `notification_new` (id, packageName, timestamp, appName, title, content, imageUrl, extras) " +
                            "SELECT id, packageName, timestamp, appName, title, content, imageUrl, extras FROM NotificationEntity"
                )

                database.execSQL("DROP TABLE NotificationEntity")
                database.execSQL("ALTER TABLE `notification_new` RENAME TO notification")
            }
        }

        /**
         * MIGRATION 2 -> 3
         * Changed primary key from composite (id + packageName)
         * to single autogenerated id.
         * Introduced notificationId column to hold old id.
         */
        internal val MIGRATION_2_3: Migration = object : Migration(2, 3) {
            override fun migrate(database: SupportSQLiteDatabase) {
                database.execSQL(
                    """CREATE TABLE IF NOT EXISTS `notification_new` (
                `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
                `notificationId` INTEGER NOT NULL,
                `packageName` TEXT NOT NULL,
                `timestamp` INTEGER NOT NULL,
                `appName` TEXT NOT NULL,
                `title` TEXT NOT NULL,
                `content` TEXT NOT NULL,
                `imageUrl` TEXT,
                `extras` TEXT
            )
            """.trimIndent()
                )

                database.execSQL(
                    """
            INSERT INTO `notification_new` (
                notificationId, packageName, timestamp, appName, title, content, imageUrl, extras
            )
            SELECT id, packageName, timestamp, appName, title, content, imageUrl, extras FROM `notification`
        """.trimIndent()
                )

                database.execSQL("DROP TABLE `notification`")

                database.execSQL("ALTER TABLE `notification_new` RENAME TO `notification`")
            }
        }
    }
}